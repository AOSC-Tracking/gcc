2023-08-10  Julian Brown  <julian@codesourcery.com>

	* c-common.h (c_omp_region_type): Add C_ORT_UPDATE and C_ORT_OMP_UPDATE
	codes.
	* c-omp.cc (omp_basic_map_kind_name): New function.
	(omp_instantiate_mapper): Add LOC parameter.  Add 'target update'
	support.
	(c_omp_instantiate_mappers): Add 'target update' support.

2023-08-10  Julian Brown  <julian@codesourcery.com>

	* c-common.h (c_omp_region_type): Add C_ORT_DECLARE_MAPPER and
	C_ORT_OMP_DECLARE_MAPPER codes.

2023-07-06  Julian Brown  <julian@codesourcery.com>

	* c-common.h (c_omp_region_type): Add C_ORT_EXIT_DATA,
	C_ORT_OMP_EXIT_DATA.
	(c_omp_instantiate_mappers): Add region type parameter.
	* c-omp.cc (omp_split_map_kind, omp_join_map_kind,
	omp_map_decayed_kind): New functions.
	(omp_instantiate_mapper): Add ORT parameter.  Implement map kind decay
	for instantiated mapper clauses.
	(c_omp_instantiate_mappers): Add ORT parameter, pass to
	omp_instantiate_mapper.

2023-07-03  Julian Brown  <julian@codesourcery.com>

	* c-common.h (expand_array_base): Update prototype.
	* c-omp.cc (c_omp_address_inspector::map_supported_p): Support
	VIEW_CONVERT_EXPR and ADDR_EXPR codes.
	(omp_expand_grid_dim): New function.
	(omp_handle_noncontig_array): New function.
	(c_omp_address_inspector:expand_array_base): Remove DECL_P parameter.
	Support noncontiguous array updates.
	(c_omp_address_inspector::expand_component_selector): Support
	noncontiguous array updates.
	(c_omp_address_inspector::expand_map_clause): Update calls to
	expand_array_base.
	* c-pretty-print.cc (c_pretty_printer::postfix_expression): Add
	OMP_ARRAY_SECTION stride support.

2023-07-03  Julian Brown  <julian@codesourcery.com>

	* c-common.h (expand_array_base, expand_component_selector,
	expand_map_clause): Adjust member declarations.
	* c-omp.cc (omp_expand_access_chain): Pass and return pointer to
	clause.
	(c_omp_address_inspector::expand_array_base): Likewise.
	(c_omp_address_inspector::expand_component_selector): Likewise.
	(c_omp_address_inspector::expand_map_clause): Likewise.

2023-06-30  Julian Brown  <julian@codesourcery.com>

	* c-common.h (omp_mapper_list): Add forward declaration.
	(c_omp_find_nested_mappers, c_omp_instantiate_mappers): Add prototypes.
	* c-omp.cc (c_omp_find_nested_mappers): New function.
	(remap_mapper_decl_info): New struct.
	(remap_mapper_decl_1, omp_instantiate_mapper,
	c_omp_instantiate_mappers): New functions.

2023-06-30  Julian Brown  <julian@codesourcery.com>

	* c-common.h (c_omp_address_inspector): Remove static from get_origin
	and maybe_unconvert_ref methods.
	* c-omp.cc (c_omp_split_clauses): Support OMP_ARRAY_SECTION.
	(c_omp_address_inspector::map_supported_p): Handle OMP_ARRAY_SECTION.
	(c_omp_address_inspector::get_origin): Avoid crash when processing
	template decl.
	(c_omp_address_inspector::maybe_unconvert_ref): Likewise.

2023-06-19  Julian Brown  <julian@codesourcery.com>

	* c-omp.cc (c_omp_address_inspector::expand_array_base): Don't omit
	pointer nodes for OpenACC.

2023-06-19  Julian Brown  <julian@codesourcery.com>

	* c-common.h (c_omp_region_type): Add C_ORT_ACC_TARGET.
	(omp_addr_token): Add forward declaration.
	(c_omp_address_inspector): New class.
	* c-omp.cc (c_omp_adjust_map_clauses): Mark decls addressable here, but
	do not change any mapping node types.
	(c_omp_address_inspector::unconverted_ref_origin,
	c_omp_address_inspector::component_access_p,
	c_omp_address_inspector::check_clause,
	c_omp_address_inspector::get_root_term,
	c_omp_address_inspector::map_supported_p,
	c_omp_address_inspector::get_origin,
	c_omp_address_inspector::maybe_unconvert_ref,
	c_omp_address_inspector::maybe_zero_length_array_section,
	c_omp_address_inspector::expand_array_base,
	c_omp_address_inspector::expand_component_selector,
	c_omp_address_inspector::expand_map_clause): New methods.
	(omp_expand_access_chain): New function.

2023-03-24  Frederik Harwath  <frederik@codesourcery.com>

	* c-omp.cc (c_omp_directives): Add PRAGMA_OMP_TILE.
	* c-pragma.cc (omp_pragmas_simd): Likewise.
	* c-pragma.h (enum pragma_kind): Add PRAGMA_OMP_TILE.
	(enum pragma_omp_clause): Add PRAGMA_OMP_CLAUSE_TILE.

2023-03-24  Frederik Harwath  <frederik@codesourcery.com>

	* c-omp.cc (c_oacc_split_loop_clauses): Adjust to renamings.

2023-03-24  Frederik Harwath  <frederik@codesourcery.com>

	* c-gimplify.cc (c_genericize_control_stmt): Handle OMP_UNROLL.
	* c-omp.cc: Add "unroll" to omp_directives[].
	* c-pragma.cc: Add "unroll" to omp_pragmas_simd[].
	* c-pragma.h (enum pragma_kind): Add PRAGMA_OMP_UNROLL to
	pragma_kind and adjust PRAGMA_OMP__LAST_.
	(enum pragma_omp_clause): Add PRAGMA_OMP_CLAUSE_FULL and
	PRAGMA_OMP_CLAUSE_PARTIAL.

2022-04-15  Kwok Cheung Yeung  <kcy@codesourcery.com>

	gcc/c-family/
	* c-omp.cc (check_and_annotate_for_loop): Check that the DECL_INITIAL
	is non-NULL before using.

2022-06-17  Chung-Lin Tang  <cltang@codesourcery.com>

	Backport from mainline:
	2022-06-17  Chung-Lin Tang  <cltang@codesourcery.com>

	* c-omp.cc (c_omp_split_clauses): Add OMP_CLAUSE_USES_ALLOCATORS case.
	* c-pragma.h (enum pragma_omp_clause): Add PRAGMA_OMP_CLAUSE_USES_ALLOCATORS.

2022-01-25  Kwok Cheung Yeung  <kcy@codesourcery.com>

	* c-omp.cc (c_omp_expand_metadirective_r): New.
	(c_omp_expand_metadirective): New.

2022-01-25  Kwok Cheung Yeung  <kcy@codesourcery.com>

	* c-common.h (enum c_omp_directive_kind): Add C_OMP_DIR_META.
	(c_omp_expand_metadirective): New prototype.
	* c-gimplify.cc (genericize_omp_metadirective_stmt): New.
	(c_genericize_control_stmt): Handle OMP_METADIRECTIVE tree nodes.
	* c-omp.cc (omp_directives): Classify metadirectives as C_OMP_DIR_META.
	(c_omp_expand_metadirective): New stub function.
	* c-pragma.cc (omp_pragmas): Add entry for metadirective.
	* c-pragma.h (enum pragma_kind): Add PRAGMA_OMP_METADIRECTIVE.

2020-08-30  Sandra Loosemore  <sandra@codesourcery.com>

	* c-omp.cc (end_test_ok_for_annotation_r): New.
	(end_test_ok_for_annotation): New.
	(check_and_annotate_for_loop): Use the new helper function.

2020-08-30  Sandra Loosemore  <sandra@codesourcery.com>
    
	* c-omp.cc (annotate_for_loop): Move initializer processing...
	(check_and_annotate_for_loop): ... to here.  Allow the loop
	variable as either operand to the condition.

2020-08-22  Sandra Loosemore  <sandra@codesourcery.com>

	Allow annotation of loops containing calls to builtins in
	kernels regions.

	* c-omp.cc (annotate_loops_in_kernels_regions): Test for
	calls to builtins.

2020-08-19  Sandra Loosemore  <sandra@codesourcery.com>

	Annotate inner loops in "acc kernels loop" directives (C/C++).

	* c-omp.cc (annotate_loops_in_kernels_regions): Process inner
	loops in combined "acc kernels loop" directives.

2020-03-27  Sandra Loosemore  <sandra@codesourcery.com>

	* c-common.h (c_oacc_annotate_loops_in_kernels_regions): Declare.
	* c-omp.cc: Include tree-iterator.h
	(enum annotation_state): New.
	(struct annotation_info): New.
	(do_not_annotate_loop): New.
	(do_not_annotate_loop_nest): New.
	(annotation_error): New.
	(c_finish_omp_for_internal): Split from c_finish_omp_for.  Use
	annotation_error function.  Code refactoring to avoid destructive
	changes that cannot be undone in case of error.
	(is_local_var): New.
	(lang_specific_unwrap_initializer): New.
	(annotate_for_loop): New.
	(check_and_annotate_for_loop): New.
	(annotate_loops_in_kernels_regions): New.
	(c_oacc_annotate_loops_in_kernels_regions): New.
	* c.opt (Wopenacc-kernels-annotate-loops): New.
	(fopenacc-kernels-annotate-loops): New.

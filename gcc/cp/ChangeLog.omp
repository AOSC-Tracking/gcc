2022-02-24  Chung-Lin Tang  <cltang@codesourcery.com>

	* semantics.cc (handle_omp_array_sections): Add handling for
	creating array-reference base-pointer attachment clause.

2022-02-18  Kwok Cheung Yeung  <kcy@codesourcery.com>

	* parser.cc (cp_parser_omp_construct): Move handling of
	PRAGMA_OMP_METADIRECTIVE from here...
	(cp_parser_pragma): ...to here.
	(analyze_metadirective_body): Check that the bracket
	nesting level is also zero before stopping the adding of tokens on
	encountering a close brace.
	(cp_parser_omp_metadirective): Modify function signature and update.
	Do not assert on remaining tokens if there has been a parse error.

2022-01-25  Kwok Cheung Yeung  <kcy@codesourcery.com>

	* parser.cc (omp_target_device_selectors): New.
	(cp_parser_omp_context_selector): Accept 'target_device' selector set.
	Treat 'device_num' selector as expression.
	(cp_parser_omp_context_selector_specification): Handle 'target_device'
	selector set.

2022-01-25  Kwok Cheung Yeung  <kcy@codesourcery.com>

	* parser.cc (cp_parser_skip_to_end_of_block_or_statement): Handle
	parentheses.
	(cp_parser_omp_context_selector): Add extra argument.  Allow
	non-constant expressions.
	(cp_parser_omp_context_selector_specification): Add extra argument and
	propagate to cp_parser_omp_context_selector.
	(analyze_metadirective_body): New.
	(cp_parser_omp_metadirective): New.
	(cp_parser_omp_construct): Handle PRAGMA_OMP_METADIRECTIVE.
	(cp_parser_pragma): Handle PRAGMA_OMP_METADIRECTIVE.

2021-08-19  Chung-Lin Tang  <cltang@codesourcery.com>

	* semantics.cc (handle_omp_array_sections_1): Robustify non-contiguous
	array check and reject non-DECL base-pointer cases as unsupported.

2021-02-01  Chung-Lin Tang  <cltang@codesourcery.com>

	* semantics.cc (finish_omp_clauses):  Adjust to allow duplicate
	mapped variables for OpenMP.

2020-08-19  Sandra Loosemore  <sandra@codesourcery.com>

	Add a "combined" flag for "acc kernels loop" etc directives.

	* parser.cc (cp_parser_oacc_loop): Set OACC_LOOP_COMBINED.

2020-03-31  Sandra Loosemore  <sandra@codesourcery.com>

	* semantics.cc (handle_omp_array_sections_1): Call STRIP_NOPS
	on length and low_bound;
	(handle_omp_array_sections): Likewise.

2020-03-27  Sandra Loosemore  <sandra@codesourcery.com>

	* decl.cc (cp_unwrap_for_init): New.
	(finish_function): Call c_oacc_annotate_loops_in_kernels_regions.

2022-02-03  Kwok Cheung Yeung  <kcy@codesourcery.com>

	* parser.ccc (cp_parser_omp_clause_map): Update call to
	cp_parser_omp_var_list_no_open.
	(cp_parser_omp_all_clauses): Update calls to cp_parser_omp_var_list.

2018-12-13  Cesar Philippidis  <cesar@codesourcery.com>
	    Nathan Sidwell  <nathan@acm.org>
	    Julian Brown  <julian@codesourcery.com>

	* parser.c (cp_parser_omp_var_list_no_open):  New c_omp_region_type
	argument.  Use it to specialize handling of OMP_CLAUSE_REDUCTION for
	OpenACC.
	(cp_parser_omp_var_list): Add c_omp_region_type argument. Update call
	to cp_parser_omp_var_list_parens.
	(cp_parser_oacc_data_clause): Update call to cp_parser_omp_var_list.
	(cp_parser_omp_clause_reduction): Change is_omp boolean parameter to
	c_omp_region_type.  Update call to cp_parser_omp_var_list_no_open.
	(cp_parser_oacc_all_clauses): Update call to
	cp_parser_omp_clause_reduction.
	(cp_parser_omp_all_clauses): Likewise.
	* semantics.c (finish_omp_reduction_clause): Add c_omp_region_type
	argument.  Suppress user-defined reduction error for OpenACC.
	(finish_omp_clauses): Emit an error on orphan OpenACC gang reductions.

2020-04-19  Chung-Lin Tang  <cltang@codesourcery.com>

	PR other/76739

	* semantics.cc (handle_omp_array_sections_1): Add 'bool &non_contiguous'
	parameter, adjust recursive call site, add cases for allowing
	pointer based multi-dimensional arrays for OpenACC.
	(handle_omp_array_sections): Adjust handle_omp_array_sections_1 call,
	handle non-contiguous case to create dynamic array map.

2023-09-19  Tobias Burnus  <tobias@codesourcery.com>

	Backported from master:
	2023-09-05  Tobias Burnus  <tobias@codesourcery.com>

	* c-parser.cc (c_parser_omp_clause_allocate): Handle
	error_mark_node.

2023-09-19  Tobias Burnus  <tobias@codesourcery.com>

	Backported from master:
	2023-08-22  Tobias Burnus  <tobias@codesourcery.com>

	* c-parser.cc (c_parser_omp_clause_defaultmap): Parse
	'all' as category.

2023-09-12  Tobias Burnus  <tobias@codesourcery.com>

	Backported from master:
	2023-09-12  Tobias Burnus  <tobias@codesourcery.com>

	* c-parser.cc (struct c_omp_loc_tree): New.
	(c_check_omp_allocate_allocator_r): New; checking moved from ...
	(c_parser_omp_allocate): ... here. Call it via walk_tree. Avoid
	ICE with tree_to_shwi for invalid too-large value.

2023-09-12  Tobias Burnus  <tobias@codesourcery.com>

	Backported from master:
	2023-09-12  Tobias Burnus  <tobias@codesourcery.com>

	* c-parser.cc (c_parser_omp_construct): Move call to
	c_parser_omp_allocate to ...
	(c_parser_pragma): ... here.
	(c_parser_omp_allocate): Avoid ICE is allocator could not be
	parsed; set 'omp allocate' attribute for stack/automatic variables
	and only reject static variables; add several additional
	restriction checks.
	* c-tree.h (c_mark_decl_jump_unsafe_in_current_scope): New prototype.
	* c-decl.cc (decl_jump_unsafe): Return true for omp-allocated decls.
	(c_mark_decl_jump_unsafe_in_current_scope): New.
	(warn_about_goto, c_check_switch_jump_warnings): Add error for
	omp-allocated decls.

2023-08-10  Julian Brown  <julian@codesourcery.com>

	* c-parser.cc (c_parser_omp_variable_list): Support array-shaping
	operator in 'declare mapper' definitions.
	(c_parser_omp_clause_map): Pass C_ORT_OMP_DECLARE_MAPPER to
	c_parser_omp_variable_list in mapper definitions.
	(c_parser_omp_clause_from_to): Add parsing for mapper modifier.
	(c_parser_omp_target_update): Instantiate mappers.

2023-07-06  Julian Brown  <julian@codesourcery.com>

	* c-parser.cc (c_parser_omp_target_data): Instantiate mappers for
	'omp target data'.
	(c_parser_omp_target_enter_data): Instantiate mappers for 'omp target
	enter data'.
	(c_parser_omp_target_exit_data): Instantiate mappers for 'omp target
	exit data'.
	(c_parser_omp_target): Add c_omp_region_type argument to
	c_omp_instantiate_mappers call.
	* c-tree.h (c_omp_instantiate_mappers): Remove spurious prototype.

2023-07-03  Julian Brown  <julian@codesourcery.com>

	* c-parser.cc (c_parser_braced_init): Disallow array-shaping operator
	in braced init.
	(c_parser_conditional_expression): Disallow array-shaping operator in
	conditional expression.
	(c_parser_cast_expression): Add array-shaping operator support.
	(c_parser_postfix_expression): Disallow array-shaping operator in
	statement expressions.
	(c_parser_postfix_expression_after_primary): Add OpenMP array section
	stride support.
	(c_parser_expr_list): Disallow array-shaping operator in expression
	lists.
	(c_array_type_nelts_top, c_array_type_nelts_total): New functions.
	(c_parser_omp_variable_list): Support array-shaping operator.
	(c_parser_omp_target_update): Recognize GOMP_MAP_TO_GRID and
	GOMP_MAP_FROM_GRID map kinds as well as OMP_CLAUSE_TO/OMP_CLAUSE_FROM.
	* c-tree.h (c_omp_array_shaping_op_p, c_omp_has_array_shape_p): New
	extern declarations.
	(create_omp_arrayshape_type): Add prototype.
	* c-typeck.cc (c_omp_array_shaping_op_p, c_omp_has_array_shape_p): New
	globals.
	(build_omp_array_section): Permit integral types, not just integer
	constants, when creating array types for array sections.
	(create_omp_arrayshape_type): New function.
	(handle_omp_array_sections_1): Add DISCONTIGUOUS parameter.  Add
	strided/rectangular array section support.
	(omp_array_section_low_bound): New function.
	(handle_omp_array_sections): Add DISCONTIGUOUS parameter.  Add
	strided/rectangular array section support.
	(c_finish_omp_clauses): Update calls to handle_omp_array_sections.
	Handle discontiguous updates.

2023-07-03  Julian Brown  <julian@codesourcery.com>

	* c-parser.cc (c_parser_postfix_expression_after_primary): Dummy stride
	support (for now).
	(struct omp_dim): Add stride support.
	(c_parser_omp_variable_list): Likewise.
	* c-tree.h (build_omp_array_section): Update prototype.
	* c-typeck.cc (mark_exp_read): Add stride support for
	OMP_ARRAY_SECTION.
	(build_omp_array_section): Add stride support.
	(handle_omp_array_sections_1): Add minimal stride support.

2023-07-03  Julian Brown  <julian@codesourcery.com>

	* c-typeck.cc (handle_omp_array_sections): Pass pointer to clause to
	process instead of clause.
	(c_finish_omp_clauses): Update calls to handle_omp_array_sections.
	Handle cases where initial clause might be replaced.

2023-06-30  Julian Brown  <julian@codesourcery.com>

	* c-decl.cc (c_omp_mapper_id, c_omp_mapper_decl, c_omp_mapper_lookup,
	c_omp_extract_mapper_directive, c_omp_map_array_section,
	c_omp_scan_mapper_bindings_r, c_omp_scan_mapper_bindings): New
	functions.
	* c-objc-common.h (LANG_HOOKS_OMP_FINISH_MAPPER_CLAUSES,
	LANG_HOOKS_OMP_MAPPER_LOOKUP, LANG_HOOKS_OMP_EXTRACT_MAPPER_DIRECTIVE,
	LANG_HOOKS_OMP_MAP_ARRAY_SECTION): Define langhooks for C.
	* c-parser.cc (c_parser_omp_clause_map): Add KIND parameter.  Handle
	mapper modifier.
	(c_parser_omp_all_clauses): Update call to c_parser_omp_clause_map with
	new kind argument.
	(c_parser_omp_target): Instantiate explicit mappers and record bindings
	for implicit mappers.
	(c_parser_omp_declare_mapper): Parse "declare mapper" directives.
	(c_parser_omp_declare): Support "declare mapper".
	* c-tree.h (c_omp_finish_mapper_clauses, c_omp_mapper_lookup,
	c_omp_extract_mapper_directive, c_omp_map_array_section,
	c_omp_mapper_id, c_omp_mapper_decl, c_omp_scan_mapper_bindings,
	c_omp_instantiate_mappers): Add prototypes.
	* c-typeck.cc (c_finish_omp_clauses): Handle GOMP_MAP_PUSH_MAPPER_NAME
	and GOMP_MAP_POP_MAPPER_NAME.
	(c_omp_finish_mapper_clauses): New function (langhook).

2023-06-30  Julian Brown  <julian@codesourcery.com>

	* c-pretty-print.cc (c_pretty_printer::postfix_expression,
	c_pretty_printer::expression): Add OMP_ARRAY_SECTION support.
	* c-parser.cc (c_parser_braced_init, c_parser_conditional_expression):
	Don't allow OpenMP array section.
	(c_parser_postfix_expression): Don't allow array section in statement
	expression.
	(c_parser_postfix_expression_after_primary): Add support
	for OpenMP array section parsing.
	(c_parser_expr_list): Don't allow OpenMP array section here.
	(c_parser_omp_variable_list): Change ALLOW_DEREF parameter to
	MAP_LVALUE.  Support parsing of general lvalues in "map", "to" and
	"from" clauses.
	(c_parser_omp_var_list_parens): Change ALLOW_DEREF parameter to
	MAP_LVALUE.  Update call to c_parser_omp_variable_list.
	(c_parser_oacc_data_clause): Update calls to
	c_parser_omp_var_list_parens.
	(c_parser_omp_clause_reduction): Use OMP_ARRAY_SECTION tree node
	instead of TREE_LIST for array sections.
	(c_parser_omp_target): Allow GOMP_MAP_ATTACH.
	* c-tree.h (c_omp_array_section_p): Add extern declaration.
	(build_omp_array_section): Add prototype.
	* c-typeck.c (c_omp_array_section_p): Add flag.
	(mark_exp_read): Support OMP_ARRAY_SECTION.
	(build_omp_array_section): Add function.
	(build_external_ref): Tweak error path for OpenMP array sections.
	(handle_omp_array_sections_1): Use OMP_ARRAY_SECTION tree code instead
	of TREE_LIST.  Handle more kinds of expressions.
	(c_oacc_check_attachments): Use OMP_ARRAY_SECTION instead of TREE_LIST
	for array sections.
	(c_finish_omp_clauses): Use OMP_ARRAY_SECTION instead of TREE_LIST.
	Check for supported expression types.

2023-06-19  Julian Brown  <julian@codesourcery.com>

	* c-parser.cc (c_parser_oacc_all_clauses): Add TARGET parameter. Use
	to select region type for c_finish_omp_clauses call.
	(c_parser_oacc_loop): Update calls to c_parser_oacc_all_clauses.
	(c_parser_oacc_compute): Likewise.
	(c_parser_omp_target_enter_data): Support ATTACH kind.
	(c_parser_omp_target_exit_data): Support DETACH kind.
	* c-typeck.cc (handle_omp_array_sections_1,
	handle_omp_array_sections, c_finish_omp_clauses): Use
	c_omp_address_inspector class and OMP address tokenizer to analyze and
	expand map clause expressions.  Fix some diagnostics.  Fix for
	C_ORT_ACC_TARGET.

2023-06-19  Julian Brown  <julian@codesourcery.com>

	* c-typeck.cc (c_finish_omp_clauses): Add braces and reindent
	OMP_CLAUSE_TO/OMP_CLAUSE_FROM/OMP_CLAUSE__CACHE_ stanza.

2023-06-19  Julian Brown  <julian@codesourcery.com>

	Revert:
	2022-02-24  Chung-Lin Tang  <cltang@codesourcery.com>

	* c-typeck.cc (handle_omp_array_sections): Add handling for
	creating array-reference base-pointer attachment clause.

2023-06-13  Sandra Loosemore  <sandra@codesourcery.com>

	* c-parser.cc (struct c_parser): Add omp_for_parse_state field.
	(struct omp_for_parse_data): New.
	(check_omp_intervening_code): New.
	(c_parser_compound_statement_nostart): Recognize intervening code
	and nested loops in OpenMP loop constructs, and handle each
	appropriately.
	(c_parser_while_statement): Error on loop in intervening code.
	(c_parser_do_statement): Likewise.
	(c_parser_for_statement): Likewise.
	(c_parser_postfix_expression_after_primary): Error on calls to
	the OpenMP runtime in intervening code.
	(c_parser_pragma): Error on OpenMP pragmas in intervening code.
	(c_parser_see_omp_loop_nest): New.
	(c_parser_omp_loop_nest): New.
	(c_parser_omp_for_loop): Rewrite to use recursive descent, calling
	c_parser_omp_loop_nest to do the heavy lifting.

2023-06-12  Tobias Burnus  <tobias@codesourcery.com>

	Backported from mainline:
	2023-06-12  Tobias Burnus  <tobias@codesourcery.com>

	* c-parser.cc (c_parser_omp_clause_map): Reword error message for
	clearness especially with 'omp target (enter/exit) data.'

2023-06-07  Tobias Burnus  <tobias@codesourcery.com>

	Backported from mainline:
	2023-06-06  Kwok Cheung Yeung  <kcy@codesourcery.com>
		    Tobias Burnus  <tobias@codesourcery.com>

	* c-parser.cc (c_parser_omp_clause_defaultmap,
	c_parser_omp_clause_map): Parse 'present'.
	(c_parser_omp_clause_to, c_parser_omp_clause_from): Remove.
	(c_parser_omp_clause_from_to): New; parse to/from clauses with
	optional present modifer.
	(c_parser_omp_all_clauses): Update call.
	(c_parser_omp_target_data, c_parser_omp_target_enter_data,
	c_parser_omp_target_exit_data): Handle new map enum values
	for 'present' mapping.

2023-06-07  Tobias Burnus  <tobias@codesourcery.com>

	Reverted:
	2023-02-01  Kwok Cheung Yeung  <kcy@codesourcery.com>

	* c-parser.cc (c_parser_omp_variable_list): Set default motion
	modifier.
	(c_parser_omp_var_list_parens): Add new parameter with default.  Parse
	'present' motion modifier and apply.
	(c_parser_omp_clause_defaultmap): Parse 'present' in defaultmap.
	(c_parser_omp_clause_map): Parse 'present' modifier in map clauses.
	(c_parser_omp_clause_to): Allow use of 'present' in variable list.
	(c_parser_omp_clause_from): Likewise.
	(c_parser_omp_target_data): Allow map clauses with 'present'
	modifiers.
	(c_parser_omp_target_enter_data): Likewise.
	(c_parser_omp_target_exit_data): Likewise.
	(c_parser_omp_target): Likewise.

2023-05-30  Tobias Burnus  <tobias@codesourcery.com>

	Backported from master:
	2023-05-30  Tobias Burnus  <tobias@codesourcery.com>

	PR c/109999
	* c-parser.cc (c_parser_oacc_all_clauses,
	c_parser_omp_all_clauses): Improve error wording.

2023-05-30  Tobias Burnus  <tobias@codesourcery.com>

	Backported from master:
	2023-04-25  Tobias Burnus  <tobias@codesourcery.com>

	* c-parser.cc (c_parser_omp_scan_loop_body): Handle
	zero exec statements before/after 'omp scan'.

2023-03-24  Frederik Harwath  <frederik@codesourcery.com>

	* c-parser.cc (c_parser_omp_nested_loop_transform_clauses):
	Add argument for the level of loop-nest at which the clauses
	appear, ...
	(c_parser_omp_tile): ... adjust use here,
	(c_parser_omp_unroll): ... and here,
	(c_parser_omp_for_loop): ... and here.  Stop treating loop
	transformations like intervening code, parse them, and adjust
	the loop-nest depth if necessary for tiling.

2023-03-24  Frederik Harwath  <frederik@codesourcery.com>

	* c-parser.cc (c_parser_omp_clause_unroll_full): Set new
	OMP_CLAUSE_TRANSFORM_LEVEL operand to default value.
	(c_parser_omp_clause_unroll_partial): Likewise.
	(c_parser_omp_tile_sizes): Likewise.
	(c_parser_omp_loop_transform_clause): Likewise.
	(c_parser_omp_nested_loop_transform_clauses): Likewise.
	(c_parser_omp_unroll): Likewise.

2023-03-24  Frederik Harwath  <frederik@codesourcery.com>

	* c-parser.cc (c_parser_nested_omp_unroll_clauses): Rename and
	generalize ...
	(c_parser_omp_nested_loop_transform_clauses): ... to this.
	(c_parser_omp_for_loop): Handle "omp tile" parsing in loop nests.
	(c_parser_omp_tile_sizes): Parse single "sizes" clause.
	(c_parser_omp_loop_transform_clause): New function.
	(c_parser_omp_tile): New function for parsing "omp tile"
	(c_parser_omp_unroll): Adjust to renaming.
	(c_parser_omp_construct): Handle PRAGMA_OMP_TILE.

2023-03-24  Frederik Harwath  <frederik@codesourcery.com>

	* c-parser.cc (c_parser_omp_clause_collapse): Adjust to renamings.
	(c_parser_oacc_clause_tile): Likewise.
	(c_parser_omp_for_loop): Likewise.
	* c-typeck.cc (c_finish_omp_clauses): Likewise.

2023-03-24  Frederik Harwath  <frederik@codesourcery.com>

	* c-parser.cc (c_parser_omp_clause_name): Handle "full" and
	"partial" clauses.
	(check_no_duplicate_clause): Change return type to bool and
	return check result.
	(c_parser_omp_clause_unroll_full): New function for parsing
	the "unroll clause".
	(c_parser_omp_clause_unroll_partial): New function for
	parsing the "partial" clause.
	(c_parser_omp_all_clauses): Handle PRAGMA_OMP_CLAUSE_FULL
	and PRAGMA_OMP_CLAUSE_PARTIAL.
	(c_parser_nested_omp_unroll_clauses): New function for parsing
	"omp unroll" directives following another directive.
	(OMP_UNROLL_CLAUSE_MASK): New definition.
	(c_parser_omp_unroll): New function for parsing "omp unroll"
	loops that are not associated with another directive.
	(c_parser_omp_construct): Handle PRAGMA_OMP_UNROLL.
	* c-typeck.cc (c_finish_omp_clauses): Handle
	OMP_CLAUSE_UNROLL_FULL, OMP_CLAUSE_UNROLL_PARTIAL,
	and OMP_CLAUSE_UNROLL_NONE.

2023-02-01  Kwok Cheung Yeung  <kcy@codesourcery.com>

	* c-parser.cc (c_parser_omp_variable_list): Set default motion
	modifier.
	(c_parser_omp_var_list_parens): Add new parameter with default.  Parse
	'present' motion modifier and apply.
	(c_parser_omp_clause_defaultmap): Parse 'present' in defaultmap.
	(c_parser_omp_clause_map): Parse 'present' modifier in map clauses.
	(c_parser_omp_clause_to): Allow use of 'present' in variable list.
	(c_parser_omp_clause_from): Likewise.
	(c_parser_omp_target_data): Allow map clauses with 'present'
	modifiers.
	(c_parser_omp_target_enter_data): Likewise.
	(c_parser_omp_target_exit_data): Likewise.
	(c_parser_omp_target): Likewise.

2022-03-17  Kwok Cheung Yeung  <kcy@codesourcery.com>

	* c-typeck.cc (handle_omp_array_sections_1): Add check to ensure
	that clause is a map.

2022-06-17  Chung-Lin Tang  <cltang@codesourcery.com>

	Backport from mainline:
	2022-06-17  Chung-Lin Tang  <cltang@codesourcery.com>

	* c-parser.cc (c_parser_omp_clause_name): Add case for uses_allocators
	clause.
	(c_parser_omp_clause_uses_allocators): New function.
	(c_parser_omp_all_clauses): Add PRAGMA_OMP_CLAUSE_USES_ALLOCATORS case.
	(OMP_TARGET_CLAUSE_MASK): Add PRAGMA_OMP_CLAUSE_USES_ALLOCATORS to mask.
	* c-typeck.cc (c_finish_omp_clauses): Add case handling for
	OMP_CLAUSE_USES_ALLOCATORS.

2022-03-10  Andrew Stubbs  <ams@codesourcery.com>

	* c-parser.cc (c_parser_omp_requires): Allow "requires
	unified_share_memory" and "unified_address".

2022-02-24  Chung-Lin Tang  <cltang@codesourcery.com>

	* c-typeck.cc (handle_omp_array_sections): Add handling for
	creating array-reference base-pointer attachment clause.

2022-02-18  Kwok Cheung Yeung  <kcy@codesourcery.com>

	* c-parser.cc (c_parser_omp_construct): Move handling of
	PRAGMA_OMP_METADIRECTIVE from here...
	(c_parser_pragma): ...to here.
	(analyze_metadirective_body): Check that the bracket nesting level
	is also zero before stopping the adding of tokens on encountering a
	close brace.
	(c_parser_omp_metadirective): Modify function signature and update.
	Do not assert on remaining tokens if there has been a parse error.

2022-01-25  Kwok Cheung Yeung  <kcy@codesourcery.com>

	* c-parser.cc (omp_target_device_selectors): New.
	(c_parser_omp_context_selector): Accept 'target_device' selector set.
	Treat 'device_num' selector as expression.
	(c_parser_omp_context_selector_specification): Handle 'target_device'
	selector set.

2022-01-25  Kwok Cheung Yeung  <kcy@codesourcery.com>

	* c-parser.cc (c_parser_skip_to_end_of_block_or_statement): Handle
	parentheses in statement.
	(c_parser_omp_metadirective): New prototype.
	(c_parser_omp_context_selector): Add extra argument.  Allow
	non-constant expressions.
	(c_parser_omp_context_selector_specification): Add extra argument and
	propagate it to c_parser_omp_context_selector.
	(analyze_metadirective_body): New.
	(c_parser_omp_metadirective): New.
	(c_parser_omp_construct): Handle PRAGMA_OMP_METADIRECTIVE.

2021-08-19  Chung-Lin Tang  <cltang@codesourcery.com>

	* c-typeck.cc (handle_omp_array_sections_1): Robustify non-contiguous
	array check and reject non-DECL base-pointer cases as unsupported.

2020-08-19  Sandra Loosemore  <sandra@codesourcery.com>

	Add a "combined" flag for "acc kernels loop" etc directives.

	* c-parser.cc (c_parser_oacc_loop): Set OACC_LOOP_COMBINED.

2020-03-27  Sandra Loosemore  <sandra@codesourcery.com>

	* c-decl.cc (c_unwrap_for_init): New.
	(finish_function): Call c_oacc_annotate_loops_in_kernels_regions.

2022-02-03  Kwok Cheung Yeung  <kcy@codesourcery.com>

	* c-parser.ccc (c_parser_omp_clause_map): Update call to
	c_parser_omp_variable_list.
	(c_parser_omp_clause_to): Update call to c_parser_omp_var_list_parens.
	(c_parser_omp_clause_from): Likewise.

2018-12-13  Cesar Philippidis  <cesar@codesourcery.com>
	    Nathan Sidwell  <nathan@acm.org>
	    Julian Brown  <julian@codesourcery.com>

	* c-parser.c (c_parser_omp_variable_list): New c_omp_region_type
	argument.  Use it to specialize handling of OMP_CLAUSE_REDUCTION for
	OpenACC.
	(c_parser_oacc_data_clause): Add region-type argument.
	(c_parser_oacc_data_clause_deviceptr): Likewise.
	(c_parser_omp_clause_reduction): Change is_omp boolean parameter to
	c_omp_region_type.  Update call to c_parser_omp_variable_list.
	(c_parser_oacc_all_clauses): Update calls to
	c_parser_omp_clause_reduction.
	(c_parser_omp_all_clauses): Likewise.
	(c_parser_oacc_cache): Update call to c_parser_omp_var_list_parens.
	* c-typeck.c (c_finish_omp_clauses): Emit an error on orphan OpenACC
	gang reductions.  Suppress user-defined reduction error for OpenACC.

2020-04-19  Chung-Lin Tang  <cltang@codesourcery.com>

	PR other/76739

	* c-typeck.cc (handle_omp_array_sections_1): Add 'bool &non_contiguous'
	parameter, adjust recursive call site, add cases for allowing
	pointer based multi-dimensional arrays for OpenACC.
	(handle_omp_array_sections): Adjust handle_omp_array_sections_1 call,
	handle non-contiguous case to create dynamic array map.
